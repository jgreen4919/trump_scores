theme_bw()+
theme(legend.position = "bottom")
dwtmSb <- ggplot(senate, aes(x = trump_margin, y = nominate, col = caucus))+
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
xlab("Trump Margin")+
ylab("DW-NOMINATE First Dimension")+
scale_color_manual(name = "",
breaks = c("D","R"),
values = c("blue","red"),
labels = c("Democrats","Republicans"))+
theme_bw()+
theme(legend.position = "bottom")
plot_grid(dwtmHb, dwtmSb, labels = c('House', 'Senate'),
scale = 0.95)
plot_grid(dwtmHb, dwtmSb, labels = c('House', 'Senate'),
scale = 0.95)
dwtmHb <- ggplot(house, aes(x = trump_margin, y = nominate, col = caucus))+
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
ylim(c(-.8, 1))+
xlab("Trump Margin")+
ylab("DW-NOMINATE First Dimension")+
scale_color_manual(name = "",
breaks = c("D","R"),
values = c("blue","red"),
labels = c("Democrats","Republicans"))+
theme_bw()+
theme(legend.position = "bottom")
dwtmSb <- ggplot(senate, aes(x = trump_margin, y = nominate, col = caucus))+
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
ylim(c(-.8, 1))+
xlab("Trump Margin")+
ylab("DW-NOMINATE First Dimension")+
scale_color_manual(name = "",
breaks = c("D","R"),
values = c("blue","red"),
labels = c("Democrats","Republicans"))+
theme_bw()+
theme(legend.position = "bottom")
plot_grid(dwtmHb, dwtmSb, labels = c('House', 'Senate'),
scale = 0.95)
select(demH, member, trump_score, tspred, ts.vs.replace, tsvr.rank) %>% arrange(dwvr.rank)
select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
View(demH)
demH <- as_tibble(demH) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
demS <- as_tibble(demS) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
demH <- as_tibble(demH) %>% mutate(dwvr.rank = dense_rank(desc(dw.vs.replace)))
select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
dense_rank(desc(demH$dw.vs.replace))
as_tibble(demH) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
demH <- as_tibble(demH) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
demS <- as_tibble(demS) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
dwrankH <- select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
demH$dwvr.rank
View(demH[,25:ncol(demH)])
library(tidyverse)
library(MASS)
library(cowplot)
library(car)
dwrankH <- select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
rankH <- select(demH, member, trump_score, tspred, ts.vs.replace, tsvr.rank) %>% arrange(tsvr.rank)
rm(list = ls())
# Script for "How to Win Primaries and Influence Policy"
# Jon Green
library(tidyverse)
library(MASS)
library(cowplot)
library(car)
set.seed(12345)
# Read in the data
source("~/Desktop/demprim/statedistarea.R")
cong <- read.csv("~/Desktop/gillibrand/trump_scores/trump_scores/trump_score_full/trump-score.csv", stringsAsFactors = FALSE)
congd1 <- read.csv("~/Desktop/gillibrand/trump_scores/trump_scores/trump_score_full/cong_dim1.csv", stringsAsFactors = FALSE)
housm <- read.csv("~/Desktop/gillibrand/trump_scores/trump_scores/trump_score_full/housemargins.csv", stringsAsFactors = FALSE)
senm <- read.csv("~/Desktop/gillibrand/trump_scores/trump_scores/trump_score_full/senatemargins.csv", stringsAsFactors = FALSE)
cong$chamber <- tolower(cong$chamber)
cong$member_short <- tolower(cong$member_short)
cong$member_short <- gsub("^.*\\. ","", cong$member_short)
cong$member_short <- gsub("[*].*$","",cong$member_short)
cong$member_short <- gsub("á","a",cong$member_short)
cong$member_short <- gsub("é","e",cong$member_short)
cong$member_short <- gsub("’","'",cong$member_short)
cong$state <- factor(substr(cong$district, start = 1, stop = 2))
congd1$member_short <- gsub("\xe7","a",congd1$member_short)
congd1$member_short <- gsub("\x83","e",congd1$member_short)
congd1$member_short <- gsub("’","'",congd1$member_short)
congd1$member_short <- iconv(congd1$member_short, from="UTF-8", to="LATIN1")
congd1$member_short <- tolower(congd1$member_short)
congd1$party[congd1$party == "Republican"] <- "R"
congd1$party[congd1$party == "Democrat"] <- "D"
congd1$party[congd1$party == "Independent"] <- "I"
congd1$state <- unlist(sapply(congd1$state, function(x){
stateabbv[which(statename == x)]
}))
congd1$state <- as.factor(congd1$state)
congd1$chamber <- tolower(congd1$chamber)
congall <- merge(cong, congd1[,c("chamber", "party", "state", "member_short","nominate")], by = c("chamber", "party", "state", "member_short"))
congall$caucus <- congall$party
congall$caucus[congall$member_short %in% c("sanders","king") & congall$chamber == "senate"] <- "D"
congall <- congall[!is.na(congall$trump_score),]
# remove incorrect duplicate rooneys from florida
congall <- congall[-c(which(congall$district == "FL-19" & congall$nominate < .5),
which(congall$district == "FL-17" & congall$nominate > .5)),]
# remove incorrect duplicate maloneys from new york
congall <- congall[-c(which(congall$district == "NY-12" & congall$nominate > -.3),
which(congall$district == "NY-18" & congall$nominate < -.3)),]
# remove incorrect duplicate greens from texas
congall <- congall[-c(which(congall$district == "TX-29" & congall$nominate < -.4),
which(congall$district == "TX-9" & congall$nominate > -.4)),]
cong[cong$member_short == "green",]
congd1[congd1$member_short == "green",]
simpleCap <- function(x) {
s <- strsplit(x, "\\, |\\-| ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
congall$member_short <- sapply(congall$member_short, function(x){
simpleCap(x)
})
congall <- congall[-which(congall$member_short %in% c("Becerra","Gomez","Conyers")),]
house <- congall[congall$chamber == "house",]
senate <- congall[congall$chamber == "senate",]
housm$district <- gsub("-0","-", housm$district)
senate$member_short <- gsub("cc","cC", senate$member_short)
house$member_short <- gsub("O'h","O'H", house$member_short)
house$member_short <- gsub("Mcg","McG", house$member_short)
house <- merge(house, housm[,c("district", "birthyr","gender","race","religion","lgbt",
"demH16","repH16","clinton16","trump16",
"cens10white","cens10black","cens10latino","cens10aapi","cens10native","cens10other",
"acs16ba","acs16whiteba","medinc",
"popvote16","pop","popWhite","popBlack","popLatino","popAAPI","popNative","popOther",
"vap","vapWhite","vapBlack","vapLatino","vapAAPI","vapNative","vapOther")],
by = "district")
senate <- merge(senate, senm[,c("inclast", "birthyr","gender","race","religion","lgbt",
"demS16","repS16","clinton16","trump16",
"cens10white","cens10black","cens10latino","cens10aapi","cens10native","cens10other",
"acs16ba","acs16whiteba","medinc",
"popvote16","pop","popWhite","popBlack","popLatino","popAAPI","popNative","popOther",
"vap","vapWhite","vapBlack","vapLatino","vapAAPI","vapNative","vapOther")],
by.x = "member_short",by.y = "inclast")
house$vapWshare <- with(house, vapWhite / vap)
house$vapBshare <- with(house, vapBlack / vap)
house$vapLshare <- with(house, vapLatino / vap)
house$vapAshare <- with(house, vapAAPI / vap)
senate$vapWshare <- with(senate, vapWhite / vap)
senate$vapBshare <- with(senate, vapBlack / vap)
senate$vapLshare <- with(senate, vapLatino / vap)
senate$vapAshare <- with(senate, vapAAPI / vap)
house <- merge(house, distarea.al, by.x = "district", by.y = "distabbv")
senate <- merge(senate, statearea[,c("stateabbv","sqmiland")], by.x = "district", by.y = "stateabbv")
house$popdens <- with(house, pop / land.area)
senate$popdens <- with(senate, pop / sqmiland)
# Basic descriptives
hist(house$trump_score)
hist(senate$trump_score)
hist(house$trump_margin)
hist(senate$trump_margin)
hist(house$trump_plus_minus)
hist(senate$trump_plus_minus)
hist(house$nominate)
hist(senate$nominate)
# Subset down to the Democratic caucus
demH <- house[house$party == "D",]
demS <- senate[senate$caucus == "D",]
# Standardize numeric variables of interest
standsH <- data.frame(
scale(
subset(
demH,select = c(nominate, trump_score, trump_margin,
demH16, repH16, cens10white, cens10black,
cens10latino, cens10aapi, cens10native,
cens10other, acs16ba, acs16whiteba,
medinc, popvote16, pop, popWhite, popBlack,
popLatino, popAAPI, popNative, popOther, vap,
vapWhite, vapBlack, vapLatino, vapAAPI, vapNative,
vapOther, vapWshare, vapBshare, vapLshare, vapAshare,
popdens)
)
)
)
names(standsH) <- c("std.nominate", "std.trump_score","std.trump_margin",
"std.demH16", "std.repH16", "std.cens10white", "std.cens10black",
"std.cens10latino", "std.cens10aapi", "std.cens10native",
"std.cens10other", "std.acs16ba", "std.acs16whiteba",
"std.medinc", "std.popvote16", "std.pop", "popWhite", "std.popBlack",
"std.popLatino", "std.popAAPI", "std.popNative", "std.popOther", "std.vap",
"std.vapWhite", "std.vapBlack", "std.vapLatino", "std.vapAAPI", "std.vapNative",
"std.vapOther", "std.vapWshare","std.vapBshare","std.vapLshare","std.vapAshare",
"std.popdens")
demH <- data.frame(cbind(demH, standsH)) # Append standardized variables
standsS <- data.frame(
scale(
subset(
demS,select = c(nominate, trump_score, trump_margin,
demS16, repS16, cens10white, cens10black,
cens10latino, cens10aapi, cens10native,
cens10other, acs16ba, acs16whiteba,
medinc, popvote16, pop, popWhite, popBlack,
popLatino, popAAPI, popNative, popOther, vap,
vapWhite, vapBlack, vapLatino, vapAAPI, vapNative,
vapOther, vapWshare, vapBshare, vapLshare, vapAshare,
popdens)
)
)
)
names(standsS) <- c("std.nominate", "std.trump_score","std.trump_margin",
"std.demS16", "std.repS16", "std.cens10white", "std.cens10black",
"std.cens10latino", "std.cens10aapi", "std.cens10native",
"std.cens10other", "std.acs16ba", "std.acs16whiteba",
"std.medinc", "std.popvote16", "std.pop", "popWhite", "std.popBlack",
"std.popLatino", "std.popAAPI", "std.popNative", "std.popOther", "std.vap",
"std.vapWhite", "std.vapBlack", "std.vapLatino", "std.vapAAPI", "std.vapNative",
"std.vapOther", "std.vapWshare","std.vapBshare","std.vapLshare","std.vapAshare",
"std.popdens")
demS <- data.frame(cbind(demS, standsS)) # Append standardized variables
dwtmS <- ggplot(demS, aes(x = trump_margin, y = nominate))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)+
xlab("Trump Margin")+
ylab("DW-NOMINATE First Dimension")+
theme_bw()
dwtmH <- ggplot(demH, aes(x = trump_margin, y = nominate))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)+
xlab("Trump Margin")+
ylab("DW-NOMINATE First Dimension")+
theme_bw()
plot_grid(dwtmH, dwtmS, labels = c('House', 'Senate'),
scale = 0.95)
tstmS <- ggplot(demS, aes(x = trump_margin, y = trump_score))+
geom_point()+
ylim(c(0,65))+
geom_smooth(method = "lm", se = FALSE)+
xlab("Trump Margin")+
ylab("Trump Score")+
theme_bw()
tstmH <- ggplot(demH, aes(x = trump_margin, y = trump_score))+
geom_point()+
ylim(c(0,65))+
geom_smooth(method = "lm", se = FALSE)+
xlab("Trump Margin")+
ylab("Trump Score")+
theme_bw()
plot_grid(tstmH, tstmS, labels = c('House', 'Senate'),
scale = 0.95)
d1tsS <- ggplot(demS, aes(x = nominate, y = trump_score))+
geom_point()+
ylim(c(0,64))+
geom_smooth(method = "lm", se = FALSE)+
xlab("DW-NOMINATE First Dimension")+
ylab("Trump Score")+
theme_bw()
d1tsH <- ggplot(demH, aes(x = nominate, y = trump_score))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)+
xlab("DW-NOMINATE First Dimension")+
ylab("Trump Score")+
theme_bw()
plot_grid(d1tsH, d1tsS, labels = c('House', 'Senate'),
scale = 0.95)
# OLS
predscore.house <- lm(trump_score ~ std.nominate + std.trump_margin,
data = demH)
psh <- summary(predscore.house)
predscore.houseplus <- lm(trump_score ~ std.nominate + std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc +
std.popdens,
data = demH)
pshp <- summary(predscore.houseplus)
predscore.housedemos <- lm(trump_score ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc,
data = demH)
pshd <- summary(predscore.housedemos)
predscore.housedemos.land <- lm(trump_score ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc+
log(popdens),
data = demH)
pshdl <- summary(predscore.housedemos.land)
predscore.senate <- lm(trump_score ~ std.nominate + std.trump_margin,
data = demS)
pss <- summary(predscore.senate)
predscore.senatedemos <- lm(trump_score ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc,
data = demS)
pssd <- summary(predscore.senatedemos)
predscore.senatedemos.land <- lm(trump_score ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc+
log(popdens),
data = demS)
pssdl <- summary(predscore.senatedemos.land)
dwscore.house <- lm(nominate ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc, data = demH)
dsh <- summary(dwscore.house)
dwscore.house.land <- lm(nominate ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc +
log(popdens), data = demH)
dshl <- summary(dwscore.house.land)
dwscore.sen <- lm(nominate ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc, data = demS)
dss <- summary(dwscore.sen)
dwscore.sen.land <- lm(nominate ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc +
log(popdens), data = demS)
dssl <- summary(dwscore.sen.land)
# Attach residuals to dataset
demH$resids <- predscore.house$residuals
demS$resids <- predscore.senate$residuals
demH$std.resids <- as.numeric(scale(demH$resids))
demS$std.resids <- as.numeric(scale(demS$resids))
demH$residsdemos <- predscore.housedemos$residuals
demS$residsdemos <- predscore.senatedemos$residuals
demH$std.residsdemos <- as.numeric(scale(demH$residsdemos))
demS$std.residsdemos <- as.numeric(scale(demS$residsdemos))
demH$dwresids <- dwscore.house$residuals
demS$dwresids <- dwscore.sen$residuals
demH$std.dwresids <- as.numeric(scale(demH$dwresids))
demS$std.dwresids <- as.numeric(scale(demS$dwresids))
# Plot residuals against quantities of interest
resplot.d1H <- ggplot(demH, aes(x = nominate, y = std.resids))+
geom_smooth(method = "lm", se = FALSE)+
geom_point(data = demH[abs(demH$std.resids) < 2,]) +
geom_text(data = demH[abs(demH$std.resids) >= 2,], aes(label=member_short))+
xlab("DW-NOMINATE 1st Dimension")+
ylab("Trump Score: Standardized Residual")+
theme_bw()
resplot.d1S <- ggplot(demS, aes(x = nominate, y = std.resids))+
geom_smooth(method = "lm", se = FALSE)+
geom_point(data = demS[abs(demS$std.resids) < 2,]) +
geom_text(data = demS[abs(demS$std.resids) >= 2,], aes(label=member_short))+
xlab("DW-NOMINATE 1st Dimension")+
ylab("Trump Score: Standardized Residual")+
theme_bw()
plot_grid(resplot.d1H, resplot.d1S, labels = c('House', 'Senate'),
scale = 0.95)
resplot.tmHd <- ggplot(demH, aes(x = trump_margin, y = std.residsdemos))+
geom_smooth(method = "lm", se = FALSE)+
geom_point(data = demH[abs(demH$std.residsdemos) < 3,]) +
geom_text(data = demH[abs(demH$std.residsdemos) >= 3,], aes(label=member_short))+
xlab("Trump Margin")+
ylab("Trump Score: Standardized Residual")+
theme_bw()
resplot.d1Sd <- ggplot(demS, aes(x = trump_margin, y = std.residsdemos))+
geom_smooth(method = "lm", se = FALSE)+
geom_point(data = demS[abs(demS$std.residsdemos) < 2,]) +
geom_text(data = demS[abs(demS$std.residsdemos) >= 2,], aes(label=member_short))+
xlab("Trump Margin")+
ylab("Trump Score: Standardized Residual")+
theme_bw()
plot_grid(resplot.tmHd, resplot.d1Sd, labels = c('House', 'Senate'),
scale = 0.95)
# Full leave-one-out validation
for(i in 1:nrow(demS)){
modts <- lm(trump_score ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc,
data = demS[-i,])
modsumts <- summary(modts)
moddw <- lm(nominate ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc,
data = demS[-i,])
modsumdw <- summary(moddw)
demS$tslooR2[i] <- modsumts$adj.r.squared
demS$dwlooR2[i] <- modsumdw$adj.r.squared
demS$tspred[i] <- predict(modts, newdata = demS[i,])
demS$dwpred[i] <- predict(moddw, newdata = demS[i,])
}
for(i in 1:nrow(demH)){
modts <- lm(trump_score ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc,
data = demH[-i,])
modsumts <- summary(modts)
moddw <- lm(nominate ~ std.trump_margin +
std.vapWshare + std.acs16ba + std.medinc,
data = demH[-i,])
modsumdw <- summary(moddw)
demH$tslooR2[i] <- modsumts$adj.r.squared
demH$dwlooR2[i] <- modsumdw$adj.r.squared
demH$tspred[i] <- predict(modts, newdata = demH[i,])
demH$dwpred[i] <- predict(moddw, newdata = demH[i,])
}
demH$tsR2vsr <- with(demH, tslooR2 - pshd$adj.r.squared)
demS$tsR2vsr <- with(demS, tslooR2 - pssd$adj.r.squared)
demH$dwR2vsr <- with(demH, dwlooR2 - pshd$adj.r.squared)
demS$dwR2vsr <- with(demS, dwlooR2 - pssd$adj.r.squared)
demH$ts.vs.replace <- with(demH, trump_score - tspred) # positive values = replacement would be more pro-Trump
demS$ts.vs.replace <- with(demS, trump_score - tspred) # positive values = replacement would be more pro-Trump
demH$dw.vs.replace <- with(demH, nominate - dwpred) # positive values = replacement would be more liberal
demS$dw.vs.replace <- with(demS, nominate - dwpred) # positive values = replacement would be more liberal
demH <- as_tibble(demH) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
demS <- as_tibble(demS) %>% mutate(tsvr.rank = dense_rank(desc(ts.vs.replace)),
dwvr.rank = dense_rank(desc(dw.vs.replace)))
tsvrH <- ggplot(demH, aes(x = tspred, y = trump_score))+
geom_point(data = demH[abs(demH$ts.vs.replace) <= 10,]) +
geom_text(data = demH[abs(demH$ts.vs.replace) > 10,], aes(label=member_short))+
ylim(c(0, 65))+
geom_abline(slope = 1, intercept = 0)+
xlab("Predicted Trump Score Based on All Other Democrats' District Demographics")+
ylab("Actual Trump Score")+
theme_bw()
tsvrS <- ggplot(demS, aes(x = tspred, y = trump_score))+
geom_point(data = demS[abs(demS$ts.vs.replace) <= 10,]) +
geom_text(data = demS[abs(demS$ts.vs.replace) > 10,], aes(label=member_short))+
ylim(c(0, 65))+
geom_abline(slope = 1, intercept = 0)+
xlab("Predicted Trump Score Based on All Other Democrats' State Demographics")+
ylab("Actual Trump Score")+
theme_bw()
plot_grid(tsvrS, tsvrH, labels = c('Senate', 'House'),
scale = 0.95)
dwvrH <- ggplot(demH, aes(x = dwpred, y = nominate))+
geom_point(data = demH[abs(demH$dw.vs.replace) <= .15,]) +
geom_text(data = demH[abs(demH$dw.vs.replace) > .15,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
ylim(c(-.8,0))+
xlab("Predicted DW-NOMINATE Based on All Other Democrats' District Demographics")+
ylab("Actual DW-NOMINATE")+
theme_bw()
dwvrS <- ggplot(demS, aes(x = dwpred, y = nominate))+
geom_point(data = demS[abs(demS$dw.vs.replace) <= .15,]) +
geom_text(data = demS[abs(demS$dw.vs.replace) > .15,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
ylim(c(-.8,0))+
xlab("Predicted DW-NOMINATE Based on All Other Democrats' State Demographics")+
ylab("Actual DW-NOMINATE")+
theme_bw()
plot_grid(dwvrS, dwvrH, labels = c('Senate', 'House'),
scale = 0.95)
tsvrS2 <- ggplot(demS, aes(x = tspred, y = trump_score))+
geom_point(data = demS[abs(demS$ts.vs.replace) <= 5,]) +
geom_text(data = demS[abs(demS$ts.vs.replace) > 5,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
ggtitle("Trump Score Above Replacement: Senate")+
xlab("Predicted Trump Score Based on All Other Democrats' State Demographics")+
ylab("Actual Trump Score")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 10, b = 0, l = 0)))
tslooR2S <- ggplot(demS, aes(x = trump_score, y = looR2))+
geom_point(data = demS[demS$looR2 > .57 & demS$looR2 < .62,]) +
geom_text(data = demS[demS$looR2 <= .57 | demS$looR2 >= 62,], aes(label=member_short))+
geom_hline(yintercept = pssd$adj.r.squared)+
ggtitle("Model Fit When Excluding...")+
xlab("Trump Score")+
ylab("Adjusted R^2")+
theme_bw()
tslooR2H <- ggplot(demH, aes(x = trump_score, y = looR2))+
geom_point(data = demH[demH$looR2 < .34 & demH$looR2 > .32,]) +
geom_text(data = demH[demH$looR2 >= .34 | demH$looR2 <= .32,], aes(label=member_short))+
geom_hline(yintercept = pshd$adj.r.squared)+
ggtitle("Model Fit When Excluding...")+
xlab("Trump Score")+
ylab("Adjusted R^2")+
theme_bw()
plot_grid(tslooR2H, tslooR2S, labels = c('House', 'Senate'),
scale = 0.95)
ggplot(demS, aes(x = tspred, y = trump_score))+
geom_point(data = demS[demS$ts.vs.replace < 5,]) +
geom_text(data = demS[demS$ts.vs.replace >= 5,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
xlab("Predicted Trump Score Based on All Other Democrats' State Demographics")+
ylab("Actual Trump Score")+
ggtitle("Senate Democrats with the Highest Trump Scores Above Replacement")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 10, b = 0, l = 0)))
ggplot(demH, aes(x = tspred, y = trump_score))+
geom_point(data = demH[demH$ts.vs.replace < 7,]) +
geom_text(data = demH[demH$ts.vs.replace >= 7,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
xlab("Predicted Trump Score Based on All Other Democrats' District Demographics")+
ylab("Actual Trump Score")+
ggtitle("House Democrats with the Highest Trump Scores Above Replacement")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 10, b = 0, l = 0)))
ggplot(demS, aes(x = tspred, y = trump_score))+
geom_point(data = demS[demS$ts.vs.replace > -5,]) +
geom_text(data = demS[demS$ts.vs.replace <= -5,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
xlab("Predicted Trump Score Based on All Other Democrats' State Demographics")+
ylab("Actual Trump Score")+
ggtitle("Senate Democrats with the Lowest Trump Scores Above Replacement")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 10, b = 0, l = 0)))
ggplot(demH, aes(x = tspred, y = trump_score))+
geom_point(data = demH[demH$ts.vs.replace > -8,]) +
geom_text(data = demH[demH$ts.vs.replace <= -8,], aes(label=member_short))+
geom_abline(slope = 1, intercept = 0)+
xlab("Predicted Trump Score Based on All Other Democrats' District Demographics")+
ylab("Actual Trump Score")+
ggtitle("House Democrats with the Lowest Trump Scores Above Replacement")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 10, b = 0, l = 0)))
rankS <- select(demS, member, trump_score, tspred, ts.vs.replace, tsvr.rank) %>% arrange(tsvr.rank)
rankH <- select(demH, member, trump_score, tspred, ts.vs.replace, tsvr.rank) %>% arrange(tsvr.rank)
dwrankH <- select(demH, member, nominate, dwpred, dw.vs.replace, dwvr.rank) %>% arrange(dwvr.rank)
